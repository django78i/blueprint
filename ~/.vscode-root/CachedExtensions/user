{"input":{"ourVersion":"1.53.2","commit":"622cb03f7e070a9670c94bae1a45d78d7181fbd4","locale":"en","devMode":false,"absoluteFolderPath":"/root/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"translations":{},"mtime":1613252943514},"result":[{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"5.9.2","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.53.0"},"keywords":["multi-root ready","prettier","formatter","javascript","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["onStartupFinished"],"icon":"icon.png","main":"./dist/extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install","prettier":"prettier --write '**/*.{ts,json,md,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development"},"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"**/*.{ts,json,md,yml,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/glob":"^7.1.3","@types/lodash":"^4.14.160","@types/mocha":"^8.0.0","@types/node":"^12","@types/prettier":"^2.1.0","@types/resolve":"^1.17.0","@types/semver":"^7.3.1","@types/sinon":"^9.0.7","@types/vscode":"^1.53.0","@typescript-eslint/eslint-plugin":"^4.3.0","@typescript-eslint/parser":"^4.3.0","eslint":"^7.10.0","eslint-config-prettier":"^7.2.0","glob":"^7.1.6","husky":"^4.2.5","lint-staged":"^10.5.3","mocha":"^8.0.1","sinon":"^9.1.0","ts-loader":"^8.0.15","typescript":"^4.0.2","vsce":"^1.80.0","vscode-nls-dev":"^3.3.2","vscode-test":"^1.4.0","webpack":"^5.4.0","webpack-cli":"^4.2.0"},"dependencies":{"find-up":"^5.0.0","ignore":"^5.1.8","lodash":"^4.17.20","mem":"^8.0.0","prettier":"^2.2.1","resolve":"^1.17.0","semver":"^7.3.4","vscode-nls":"^5.0.0"},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of languages IDs to disable this extension on","scope":"window"},"prettier.documentSelectors":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter","scope":"window"},"prettier.enable":{"type":"boolean","default":true,"markdownDescription":"Controls whether prettier is enabled or not.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"If true, this extension will process files in node_modules","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [prettier.resolveConfig](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a .prettierignore file","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the prettier module","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit","scope":"resource"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab","scope":"resource"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"If true, will use single instead of double quotes","scope":"resource"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. Valid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"resource"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals","scope":"resource"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line","scope":"resource"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line","scope":"resource"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"resource"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special @format marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the @format marker.","scope":"resource"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs","scope":"resource"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines","scope":"resource"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter","scope":"resource"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX","scope":"resource"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global whitespace sensitivity for HTML files.\n Valid options:\n- `css` - Respect the default value of CSS display property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignores` - Whitespaces are considered insensitive.","scope":"resource"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue files. Some people (like the creator of Vue) donâ€™t indent to save an indentation level, but this might break code folding in your editor.","scope":"resource"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier","scope":"resource"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted","scope":"resource"},"prettier.embeddedLanguageFormatting":{"type":"string","enum":["auto","off"],"default":"auto","markdownDescription":"Control whether Prettier formats quoted code embedded in the file.","scope":"resource"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"}]},"uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"esbenp.prettier-vscode","identifier":{"value":"esbenp.prettier-vscode","_lower":"esbenp.prettier-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/esbenp.prettier-vscode-5.9.2","path":"/root/.vscode/extensions/esbenp.prettier-vscode-5.9.2","scheme":"file"}},{"name":"TypeScriptImport","displayName":"TypeScript Import","description":"Automates importing of TypeScript classes","icon":"etc/icon.png","author":"Kevin McGowan","license":"MIT","version":"1.17.0","publisher":"kevinmcgowan","engines":{"vscode":"^1.8.0"},"categories":["Languages"],"activationEvents":["onLanguage:typescript","onLanguage:javascript"],"main":"./out/extension","contributes":{"configuration":{"type":"object","title":"TypeScriptImporter Configuration","properties":{"TypeScriptImporter.showNamespaceOnImports":{"type":"boolean","default":true,"description":"When set to true, imports will show the namespace in parenthesis"},"TypeScriptImporter.TSConfigFrameworkName":{"type":"string","default":"frameworks","description":"The node within TSConfig that references depenant frameworks that we have access to. Any framework listed in here will provide code hints. Requires Reload to take affect"},"TypeScriptImporter.IgnoreListedFolders":{"type":"string","default":"./, .scripts/","description":"Comma separated string. These folders will be excluded from code hints. This is useful if you have a mix of CommonJS and Namespaces"},"TypeScriptImporter.SyncInterval":{"type":"number","default":"15","description":"How often to resync for changes. Advanced users only, can cause instability"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","update-vscode":"node ./node_modules/vscode/bin/install","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^2.2.33","@types/node":"^6.0.52","typescript":"^2.1.5","vscode":"^1.0.3"},"dependencies":{"vscode-languageclient":"^3.0.3","glob":"~7.0.3"},"repository":{"type":"git","url":"https://github.com/starkevin/VSCode-TypeScript-Importer"},"uuid":"a697ef49-8649-4960-903b-de276438d8b6","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"kevinmcgowan.TypeScriptImport","identifier":{"value":"kevinmcgowan.TypeScriptImport","_lower":"kevinmcgowan.typescriptimport"},"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/kevinmcgowan.typescriptimport-1.17.0","path":"/root/.vscode/extensions/kevinmcgowan.typescriptimport-1.17.0","scheme":"file"}},{"name":"import-sorter","displayName":"TypeScript Import Sorter","description":"Extension sorts TypeScript imports according to the configuration provided. The configuration defaults follow ESLint sort-imports rule","icon":"assets/icons/import-sorter.png","version":"3.3.1","publisher":"mike-co","engines":{"vscode":"^1.33.0"},"repository":{"type":"git","url":"https://github.com/SoominHan/import-sorter.git"},"license":"SEE LICENSE IN LICENSE","categories":["Formatters"],"keywords":["Typescript","imports","sort","order","sort imports"],"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescript","onLanguage:typescriptreact","onCommand:extension.sortImports","onCommand:extension.sortImportsInDirectory"],"main":"./out/src/extension","scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test","clean":"rimraf -- node_modules coverage out","lint":"tslint src/**/*.ts"},"dependencies":{"glob":"^7.1.2","typescript":"^2.6.1","lodash":"4.17.4","rxjs":"6.3.3"},"devDependencies":{"@types/lodash":"4.14.117","@types/mocha":"^2.2.42","@types/node":"^8.10.25","@types/glob":"^5.0.30","vscode-nls":"^2.0.2","expect.js":"^0.3.1","mocha":"^2.3.3","tslint":"^5.8.0","vscode":"^1.1.21"},"contributes":{"commands":[{"command":"extension.sortImports","title":"Sort Imports","category":"TSI"},{"command":"extension.sortImportsInDirectory","title":"Sort Imports (Directory deep)","category":"TSI"}],"keybindings":[{"command":"extension.sortImports","key":"ctrl+alt+o","when":"editorTextFocus && !editorReadonly"}],"menus":{"explorer/context":[{"command":"extension.sortImportsInDirectory","group":"1_modification","when":"explorerResourceIsFolder && config.importSorter.generalConfiguration.sortImportsInDirectory"}]},"configuration":{"type":"object","title":"Import Sorter configuration","properties":{"importSorter.generalConfiguration.configurationFilePath":{"type":"string","default":"./import-sorter.json","description":"Default file configuration name"},"importSorter.generalConfiguration.sortImportsInDirectory":{"type":"boolean","default":true,"description":"Enables menu option for sorting in directory"},"importSorter.generalConfiguration.sortOnBeforeSave":{"type":"boolean","default":false,"description":"Enables sort before each save of the document"},"importSorter.generalConfiguration.exclude":{"type":"array","default":[],"items":{"type":"string"},"description":"Excludes sorting for files which match given regex expression. Regex considers the whole file path. The file path separator is normalized to /"},"importSorter.sortConfiguration.importMembers.order":{"enum":["caseInsensitive","lowercaseFirst","lowercaseLast","unsorted"],"default":"caseInsensitive","description":"Sort Order of names in curly brackets"},"importSorter.sortConfiguration.importMembers.direction":{"enum":["asc","desc"],"default":"asc","description":"Sort Direction of names in curly brackets"},"importSorter.sortConfiguration.importPaths.order":{"enum":["caseInsensitive","lowercaseFirst","lowercaseLast","unsorted"],"default":"caseInsensitive","description":"Sort Order of paths"},"importSorter.sortConfiguration.importPaths.direction":{"enum":["asc","desc"],"default":"asc","description":"Sort Direction of paths"},"importSorter.sortConfiguration.joinImportPaths":{"type":"boolean","default":true,"description":"Combine imports with the same path"},"importSorter.sortConfiguration.removeUnusedImports":{"type":"boolean","default":false,"description":"Removes not used imports where we do not have explicit side effects"},"importSorter.sortConfiguration.removeUnusedDefaultImports":{"type":"boolean","default":false,"description":"Works only if removeUnusedImports enabled. This option will remove default imports if they are not explicitly used in the source code."},"importSorter.sortConfiguration.customOrderingRules.defaultOrderLevel":{"type":"number","default":20,"description":"The default order level of everything which is not included into rules"},"importSorter.sortConfiguration.customOrderingRules.defaultNumberOfEmptyLinesAfterGroup":{"type":"number","default":1,"description":"The default number of empty lines after any group. This has lesser priority then empty lines in rules"},"importSorter.sortConfiguration.customOrderingRules.disableDefaultOrderSort":{"type":"boolean","default":false,"description":"Disable sorting of path on the default group"},"importSorter.sortConfiguration.customOrderingRules.rules":{"type":"array","default":[{"type":"importMember","regex":"^$","orderLevel":5,"disableSort":true},{"regex":"^[^.@]","orderLevel":10},{"regex":"^[@]","orderLevel":15},{"regex":"^[.]","orderLevel":30}],"description":"The default order level of everything which is not included into rules"},"importSorter.importStringConfiguration.tabSize":{"type":"number","default":4,"description":"Left number of spaces for the new lined imports. If tabType is set to 'tab', then the configuration defines the size of the tab in number of spaces"},"importSorter.importStringConfiguration.tabType":{"enum":["space","tab"],"default":"space","description":"Defines the character which will be printed on each new lined import expression"},"importSorter.importStringConfiguration.numberOfEmptyLinesAfterAllImports":{"type":"number","default":1,"description":"The number of new lines after the last sorted import"},"importSorter.importStringConfiguration.quoteMark":{"enum":["single","double"],"default":"single","description":"The path quotes"},"importSorter.importStringConfiguration.maximumNumberOfImportExpressionsPerLine.type":{"enum":["maxLineLength","words","newLineEachExpressionAfterCountLimit","newLineEachExpressionAfterCountLimitExceptIfOnlyOne"],"default":"maxLineLength","description":"The type of length restriction, before import is moved to a new line"},"importSorter.importStringConfiguration.maximumNumberOfImportExpressionsPerLine.count":{"type":"number","default":100,"description":"The count of units before import is new-lined"},"importSorter.importStringConfiguration.spacingPerImportExpression.afterStartingBracket":{"type":"number","default":1,"description":"Number of spaces after {"},"importSorter.importStringConfiguration.spacingPerImportExpression.beforeEndingBracket":{"type":"number","default":1,"description":"Number of spaces before }"},"importSorter.importStringConfiguration.spacingPerImportExpression.beforeComma":{"type":"number","default":0,"description":"Number of spaces before comma"},"importSorter.importStringConfiguration.spacingPerImportExpression.afterComma":{"type":"number","default":1,"description":"Number of spaces after comma"},"importSorter.importStringConfiguration.trailingComma":{"enum":["none","always","multiLine"],"default":"none","description":"If always/multiLine then adds a trailing comma at the end of the imports for 'single and multi' and 'multi-line' imports respectively. Default is none therefore no trailing comma"},"importSorter.importStringConfiguration.hasSemicolon":{"type":"boolean","default":true,"description":"If true then the import string has a semicolon at the end, otherwise it will not be appended. Default is true"}}}},"uuid":"1cbadbba-0bd6-46fa-a309-76704bf66217","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"mike-co.import-sorter","identifier":{"value":"mike-co.import-sorter","_lower":"mike-co.import-sorter"},"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/mike-co.import-sorter-3.3.1","path":"/root/.vscode/extensions/mike-co.import-sorter-3.3.1","scheme":"file"}},{"name":"autoimport","displayName":"Auto Import","description":"Automatically finds, parses and provides code actions and code completion for all available imports. Works with Typescript and TSX","version":"1.5.3","publisher":"steoates","engines":{"vscode":"^1.17.0"},"galleryBanner":{"color":"#2d4794","theme":"dark"},"keywords":["typescript","imports","require","auto import","multi-root ready"],"categories":["Other"],"activationEvents":["onLanguage:typescript","onLanguage:typescriptreact"],"main":"./out/src/extension","contributes":{"commands":[{"command":"extension.scanNodeModules","title":"Scan node_modules for imports"}],"configuration":{"type":"object","title":"Auto Import configuration","properties":{"autoimport.filesToScan":{"type":"string","default":"**/*.{ts,tsx}","description":"Glob for files to watch and scan, e.g ./src/** ./src/app/**/*.ts. Defaults to **/*.{ts,tsx}"},"autoimport.showNotifications":{"type":"boolean","default":false,"description":"Specifies wether to show notifications from Auto Import"},"autoimport.doubleQuotes":{"type":"boolean","default":false,"description":"Specifies wether to use double quotes"},"autoimport.spaceBetweenBraces":{"type":"boolean","default":true,"description":"Specifies wether to use spaces between first and last brace"},"autoimport.autoComplete":{"type":"boolean","default":true,"description":"Adds found items to intellisense and automatically imports then"},"autoimport.useSemiColon":{"type":"boolean","default":true,"description":"Use ; at the end of a line e.g Import * from ./app or Import * from ./app; - Default True"}}}},"icon":"icon.png","homepage":"https://github.com/soates/Auto-Import","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","@types/node":"^6.0.40"},"dependencies":{"lodash":"^4.13.1"},"uuid":"70378119-1d85-4935-9733-0298c7a369a2","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"steoates.autoimport","identifier":{"value":"steoates.autoimport","_lower":"steoates.autoimport"},"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/steoates.autoimport-1.5.3","path":"/root/.vscode/extensions/steoates.autoimport-1.5.3","scheme":"file"}}]}