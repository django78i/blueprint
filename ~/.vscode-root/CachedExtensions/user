{"input":{"ourVersion":"1.49.1","commit":"58bb7b2331731bf72587010e943852e13e6fd3cf","locale":"en","devMode":false,"absoluteFolderPath":"/root/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1598255517899},"result":[{"name":"TypeScriptImport","displayName":"TypeScript Import","description":"Automates importing of TypeScript classes","icon":"etc/icon.png","author":"Kevin McGowan","license":"MIT","version":"1.17.0","publisher":"kevinmcgowan","engines":{"vscode":"^1.8.0"},"categories":["Languages"],"activationEvents":["onLanguage:typescript","onLanguage:javascript"],"main":"./out/extension","contributes":{"configuration":{"type":"object","title":"TypeScriptImporter Configuration","properties":{"TypeScriptImporter.showNamespaceOnImports":{"type":"boolean","default":true,"description":"When set to true, imports will show the namespace in parenthesis"},"TypeScriptImporter.TSConfigFrameworkName":{"type":"string","default":"frameworks","description":"The node within TSConfig that references depenant frameworks that we have access to. Any framework listed in here will provide code hints. Requires Reload to take affect"},"TypeScriptImporter.IgnoreListedFolders":{"type":"string","default":"./, .scripts/","description":"Comma separated string. These folders will be excluded from code hints. This is useful if you have a mix of CommonJS and Namespaces"},"TypeScriptImporter.SyncInterval":{"type":"number","default":"15","description":"How often to resync for changes. Advanced users only, can cause instability"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","update-vscode":"node ./node_modules/vscode/bin/install","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/mocha":"^2.2.33","@types/node":"^6.0.52","typescript":"^2.1.5","vscode":"^1.0.3"},"dependencies":{"vscode-languageclient":"^3.0.3","glob":"~7.0.3"},"repository":{"type":"git","url":"https://github.com/starkevin/VSCode-TypeScript-Importer"},"uuid":"a697ef49-8649-4960-903b-de276438d8b6","isBuiltin":false,"isUnderDevelopment":false,"id":"kevinmcgowan.TypeScriptImport","identifier":{"value":"kevinmcgowan.TypeScriptImport","_lower":"kevinmcgowan.typescriptimport"},"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/kevinmcgowan.typescriptimport-1.17.0","path":"/root/.vscode/extensions/kevinmcgowan.typescriptimport-1.17.0","scheme":"file"}},{"name":"import-sorter","displayName":"TypeScript Import Sorter","description":"Extension sorts TypeScript imports according to the configuration provided. The configuration defaults follow ESLint sort-imports rule","icon":"assets/icons/import-sorter.png","version":"3.3.1","publisher":"mike-co","engines":{"vscode":"^1.33.0"},"repository":{"type":"git","url":"https://github.com/SoominHan/import-sorter.git"},"license":"SEE LICENSE IN LICENSE","categories":["Formatters"],"keywords":["Typescript","imports","sort","order","sort imports"],"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescript","onLanguage:typescriptreact","onCommand:extension.sortImports","onCommand:extension.sortImportsInDirectory"],"main":"./out/src/extension","scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test","clean":"rimraf -- node_modules coverage out","lint":"tslint src/**/*.ts"},"dependencies":{"glob":"^7.1.2","typescript":"^2.6.1","lodash":"4.17.4","rxjs":"6.3.3"},"devDependencies":{"@types/lodash":"4.14.117","@types/mocha":"^2.2.42","@types/node":"^8.10.25","@types/glob":"^5.0.30","vscode-nls":"^2.0.2","expect.js":"^0.3.1","mocha":"^2.3.3","tslint":"^5.8.0","vscode":"^1.1.21"},"contributes":{"commands":[{"command":"extension.sortImports","title":"Sort Imports","category":"TSI"},{"command":"extension.sortImportsInDirectory","title":"Sort Imports (Directory deep)","category":"TSI"}],"keybindings":[{"command":"extension.sortImports","key":"ctrl+alt+o","when":"editorTextFocus && !editorReadonly"}],"menus":{"explorer/context":[{"command":"extension.sortImportsInDirectory","group":"1_modification","when":"explorerResourceIsFolder && config.importSorter.generalConfiguration.sortImportsInDirectory"}]},"configuration":{"type":"object","title":"Import Sorter configuration","properties":{"importSorter.generalConfiguration.configurationFilePath":{"type":"string","default":"./import-sorter.json","description":"Default file configuration name"},"importSorter.generalConfiguration.sortImportsInDirectory":{"type":"boolean","default":true,"description":"Enables menu option for sorting in directory"},"importSorter.generalConfiguration.sortOnBeforeSave":{"type":"boolean","default":false,"description":"Enables sort before each save of the document"},"importSorter.generalConfiguration.exclude":{"type":"array","default":[],"items":{"type":"string"},"description":"Excludes sorting for files which match given regex expression. Regex considers the whole file path. The file path separator is normalized to /"},"importSorter.sortConfiguration.importMembers.order":{"enum":["caseInsensitive","lowercaseFirst","lowercaseLast","unsorted"],"default":"caseInsensitive","description":"Sort Order of names in curly brackets"},"importSorter.sortConfiguration.importMembers.direction":{"enum":["asc","desc"],"default":"asc","description":"Sort Direction of names in curly brackets"},"importSorter.sortConfiguration.importPaths.order":{"enum":["caseInsensitive","lowercaseFirst","lowercaseLast","unsorted"],"default":"caseInsensitive","description":"Sort Order of paths"},"importSorter.sortConfiguration.importPaths.direction":{"enum":["asc","desc"],"default":"asc","description":"Sort Direction of paths"},"importSorter.sortConfiguration.joinImportPaths":{"type":"boolean","default":true,"description":"Combine imports with the same path"},"importSorter.sortConfiguration.removeUnusedImports":{"type":"boolean","default":false,"description":"Removes not used imports where we do not have explicit side effects"},"importSorter.sortConfiguration.removeUnusedDefaultImports":{"type":"boolean","default":false,"description":"Works only if removeUnusedImports enabled. This option will remove default imports if they are not explicitly used in the source code."},"importSorter.sortConfiguration.customOrderingRules.defaultOrderLevel":{"type":"number","default":20,"description":"The default order level of everything which is not included into rules"},"importSorter.sortConfiguration.customOrderingRules.defaultNumberOfEmptyLinesAfterGroup":{"type":"number","default":1,"description":"The default number of empty lines after any group. This has lesser priority then empty lines in rules"},"importSorter.sortConfiguration.customOrderingRules.disableDefaultOrderSort":{"type":"boolean","default":false,"description":"Disable sorting of path on the default group"},"importSorter.sortConfiguration.customOrderingRules.rules":{"type":"array","default":[{"type":"importMember","regex":"^$","orderLevel":5,"disableSort":true},{"regex":"^[^.@]","orderLevel":10},{"regex":"^[@]","orderLevel":15},{"regex":"^[.]","orderLevel":30}],"description":"The default order level of everything which is not included into rules"},"importSorter.importStringConfiguration.tabSize":{"type":"number","default":4,"description":"Left number of spaces for the new lined imports. If tabType is set to 'tab', then the configuration defines the size of the tab in number of spaces"},"importSorter.importStringConfiguration.tabType":{"enum":["space","tab"],"default":"space","description":"Defines the character which will be printed on each new lined import expression"},"importSorter.importStringConfiguration.numberOfEmptyLinesAfterAllImports":{"type":"number","default":1,"description":"The number of new lines after the last sorted import"},"importSorter.importStringConfiguration.quoteMark":{"enum":["single","double"],"default":"single","description":"The path quotes"},"importSorter.importStringConfiguration.maximumNumberOfImportExpressionsPerLine.type":{"enum":["maxLineLength","words","newLineEachExpressionAfterCountLimit","newLineEachExpressionAfterCountLimitExceptIfOnlyOne"],"default":"maxLineLength","description":"The type of length restriction, before import is moved to a new line"},"importSorter.importStringConfiguration.maximumNumberOfImportExpressionsPerLine.count":{"type":"number","default":100,"description":"The count of units before import is new-lined"},"importSorter.importStringConfiguration.spacingPerImportExpression.afterStartingBracket":{"type":"number","default":1,"description":"Number of spaces after {"},"importSorter.importStringConfiguration.spacingPerImportExpression.beforeEndingBracket":{"type":"number","default":1,"description":"Number of spaces before }"},"importSorter.importStringConfiguration.spacingPerImportExpression.beforeComma":{"type":"number","default":0,"description":"Number of spaces before comma"},"importSorter.importStringConfiguration.spacingPerImportExpression.afterComma":{"type":"number","default":1,"description":"Number of spaces after comma"},"importSorter.importStringConfiguration.trailingComma":{"enum":["none","always","multiLine"],"default":"none","description":"If always/multiLine then adds a trailing comma at the end of the imports for 'single and multi' and 'multi-line' imports respectively. Default is none therefore no trailing comma"},"importSorter.importStringConfiguration.hasSemicolon":{"type":"boolean","default":true,"description":"If true then the import string has a semicolon at the end, otherwise it will not be appended. Default is true"}}}},"uuid":"1cbadbba-0bd6-46fa-a309-76704bf66217","isBuiltin":false,"isUnderDevelopment":false,"id":"mike-co.import-sorter","identifier":{"value":"mike-co.import-sorter","_lower":"mike-co.import-sorter"},"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/mike-co.import-sorter-3.3.1","path":"/root/.vscode/extensions/mike-co.import-sorter-3.3.1","scheme":"file"}},{"name":"autoimport","displayName":"Auto Import","description":"Automatically finds, parses and provides code actions and code completion for all available imports. Works with Typescript and TSX","version":"1.5.3","publisher":"steoates","engines":{"vscode":"^1.17.0"},"galleryBanner":{"color":"#2d4794","theme":"dark"},"keywords":["typescript","imports","require","auto import","multi-root ready"],"categories":["Other"],"activationEvents":["onLanguage:typescript","onLanguage:typescriptreact"],"main":"./out/src/extension","contributes":{"commands":[{"command":"extension.scanNodeModules","title":"Scan node_modules for imports"}],"configuration":{"type":"object","title":"Auto Import configuration","properties":{"autoimport.filesToScan":{"type":"string","default":"**/*.{ts,tsx}","description":"Glob for files to watch and scan, e.g ./src/** ./src/app/**/*.ts. Defaults to **/*.{ts,tsx}"},"autoimport.showNotifications":{"type":"boolean","default":false,"description":"Specifies wether to show notifications from Auto Import"},"autoimport.doubleQuotes":{"type":"boolean","default":false,"description":"Specifies wether to use double quotes"},"autoimport.spaceBetweenBraces":{"type":"boolean","default":true,"description":"Specifies wether to use spaces between first and last brace"},"autoimport.autoComplete":{"type":"boolean","default":true,"description":"Adds found items to intellisense and automatically imports then"},"autoimport.useSemiColon":{"type":"boolean","default":true,"description":"Use ; at the end of a line e.g Import * from ./app or Import * from ./app; - Default True"}}}},"icon":"icon.png","homepage":"https://github.com/soates/Auto-Import","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","@types/node":"^6.0.40"},"dependencies":{"lodash":"^4.13.1"},"uuid":"70378119-1d85-4935-9733-0298c7a369a2","isBuiltin":false,"isUnderDevelopment":false,"id":"steoates.autoimport","identifier":{"value":"steoates.autoimport","_lower":"steoates.autoimport"},"extensionLocation":{"$mid":1,"fsPath":"/root/.vscode/extensions/steoates.autoimport-1.5.3","path":"/root/.vscode/extensions/steoates.autoimport-1.5.3","scheme":"file"}}]}